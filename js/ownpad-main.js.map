{"version":3,"file":"ownpad-main.js?v=0df9d1c84ebd7143a68a","mappings":"CAUA,SAAUA,GAEN,IAAIC,EAAkB,WAClBC,KAAKC,YACT,EAEAF,EAAgBG,UAAY,CAExBC,kBAAkB,EAClBC,wBAAwB,EACxBC,qBAAqB,EACrBC,mBAAmB,EAEnBL,WAAY,WACR,IAAIM,EAAOP,KAEoB,OAA5BQ,GAAGC,iBAAiBC,KACnBC,EAAEC,KAAK,CACHC,IAAKL,GAAGM,YAAY,sCACrBC,MAAK,SAASC,GACbT,EAAKJ,iBAA0D,QAAvCa,EAAOC,KAAKC,uBACpCX,EAAKH,uBAAuE,QAA9CY,EAAOC,KAAKE,8BAC1CZ,EAAKF,oBAA6D,QAAvCW,EAAOC,KAAKG,uBACvCb,EAAKD,kBAA4D,QAAxCU,EAAOC,KAAKI,wBACrCb,GAAGc,QAAQC,SAAS,wBAAyBhB,EACjD,GAER,EAGAiB,OAAQ,SAASC,GACb,IAAIlB,EAAOP,KAEX,IAA6B,IAA1BO,EAAKJ,oBACgC,IAAhCI,EAAKH,yBAAgE,IAA7BG,EAAKF,qBAC7CoB,EAAYC,aAAa,CACrBC,GAAI,WACJC,YAAaC,EAAE,SAAU,OACzBC,aAAcD,EAAE,SAAU,eAC1BE,UAAW,yBACXC,SAAU,WACVC,cAAe,SAAUC,GACrB3B,EAAK4B,WAAW,WAAYD,EAChC,KAIwB,IAA7B3B,EAAKF,qBAA8B,CAClC,IAAIuB,GAA8C,IAAhCrB,EAAKH,uBAAkC,gBAAkB,MACvE0B,GAA+C,IAAhCvB,EAAKH,uBAAkC,wBAA0B,cACpFqB,EAAYC,aAAa,CACrBC,GAAI,eACJC,YAAaC,EAAE,SAAUD,GACzBE,aAAcD,EAAE,SAAUC,GAC1BC,UAAW,yBACXC,SAAU,WACVC,cAAe,SAASC,GACpB3B,EAAK4B,WAAW,WAAYD,GAAU,EAC1C,GAER,EAG0B,IAA3B3B,EAAKD,mBACJmB,EAAYC,aAAa,CACrBC,GAAI,YACJC,YAAaC,EAAE,SAAU,QACzBC,aAAcD,EAAE,SAAU,iBAC1BE,UAAW,0BACXC,SAAU,YACVC,cAAe,SAASC,GACpB3B,EAAK4B,WAAW,YAAaD,EACjC,GAGZ,EAEAC,WAAY,SAASC,EAAMF,EAAUG,GAE7BA,OAAuC,IAAjBA,GAA+BA,EAIzDvC,EAAIwC,MAAMA,MAAMC,gBAAgBL,GAChCA,EAAWM,SAASC,cAAcP,GAElCvB,EAAE+B,KACElC,GAAGM,YAAY,iCAAkC,CAC7C6B,IAAK7C,EAAIwC,MAAMM,IAAIC,gBAAgBC,sBACnCC,QAASb,EACTE,KAAMA,EACNY,UAAWX,IAEf,SAASrB,GACe,WAAjBA,EAAOiC,OACNT,SAASU,IAAIlC,EAAOC,KAAM,CAACkC,SAAS,EAAMC,UAAU,IAGpD5C,GAAG6C,QAAQC,MAAMtC,EAAOC,KAAKsC,QAAS1B,EAAE,OAAQ,yBAExD,GAER,GAKJlB,EAAE6C,UAAUC,OAAM,WACX9C,EAAE,aAAa+C,QACd5D,EAAIC,gBAAkB,IAAIA,EAElC,GAEH,CAjHD,CAiHGD","sources":["webpack:///ownpad/src/main.js"],"sourcesContent":["/**\n * Nextcloud - Ownpad\n *\n * This file is licensed under the Affero General Public License\n * version 3 or later. See the COPYING file.\n *\n * @author Olivier Tétard <olivier.tetard@miskin.fr>\n * @copyright Olivier Tétard <olivier.tetard@miskin.fr>, 2017\n */\n\n(function(OCA) {\n\n    var FilesOwnpadMenu = function() {\n        this.initialize();\n    }\n\n    FilesOwnpadMenu.prototype = {\n\n        _etherpadEnabled: false,\n        _etherpadPublicEnabled: false,\n        _etherpadAPIEnabled: false,\n        _ethercalcEnabled: false,\n\n        initialize: function() {\n            var self = this;\n\n            if(OC.getCurrentUser().uid !== null) {\n                $.ajax({\n                    url: OC.generateUrl('/apps/ownpad/ajax/v1.0/getconfig')\n                }).done(function(result) {\n                    self._etherpadEnabled = result.data.ownpad_etherpad_enable === \"yes\";\n                    self._etherpadPublicEnabled = result.data.ownpad_etherpad_public_enable === \"yes\";\n                    self._etherpadAPIEnabled = result.data.ownpad_etherpad_useapi === \"yes\";\n                    self._ethercalcEnabled = result.data.ownpad_ethercalc_enable === \"yes\";\n                    OC.Plugins.register('OCA.Files.NewFileMenu', self);\n                });\n            }\n        },\n\n\n        attach: function(newFileMenu) {\n            var self = this;\n\n            if(self._etherpadEnabled === true) {\n                if (self._etherpadPublicEnabled === true || self._etherpadAPIEnabled === false) {\n                    newFileMenu.addMenuEntry({\n                        id: 'etherpad',\n                        displayName: t('ownpad', 'Pad'),\n                        templateName: t('ownpad', 'New pad.pad'),\n                        iconClass: 'icon-filetype-etherpad',\n                        fileType: 'etherpad',\n                        actionHandler: function (filename) {\n                            self._createPad(\"etherpad\", filename);\n                        }\n                    });\n                }\n\n                if(self._etherpadAPIEnabled === true) {\n                    var displayName = self._etherpadPublicEnabled === true ? 'Protected Pad' : 'Pad';\n                    var templateName = self._etherpadPublicEnabled === true ? 'New protected pad.pad' : 'New pad.pad';\n                    newFileMenu.addMenuEntry({\n                        id: 'etherpad-api',\n                        displayName: t('ownpad', displayName),\n                        templateName: t('ownpad', templateName),\n                        iconClass: 'icon-filetype-etherpad',\n                        fileType: 'etherpad',\n                        actionHandler: function(filename) {\n                            self._createPad(\"etherpad\", filename, true);\n                        }\n                    });\n                }\n            }\n\n            if(self._ethercalcEnabled === true) {\n                newFileMenu.addMenuEntry({\n                    id: 'ethercalc',\n                    displayName: t('ownpad', 'Calc'),\n                    templateName: t('ownpad', 'New calc.calc'),\n                    iconClass: 'icon-filetype-ethercalc',\n                    fileType: 'ethercalc',\n                    actionHandler: function(filename) {\n                        self._createPad(\"ethercalc\", filename);\n                    }\n                });\n            }\n        },\n\n        _createPad: function(type, filename, is_protected) {\n            // Default value for `is_protected`.\n            var is_protected = typeof is_protected !== 'undefined' ? is_protected : false;\n\n            var self = this;\n\n            OCA.Files.Files.isFileNameValid(filename);\n            filename = FileList.getUniqueName(filename);\n\n            $.post(\n                OC.generateUrl('/apps/ownpad/ajax/v1.0/newpad'), {\n                    dir: OCA.Files.App.currentFileList.getCurrentDirectory(),\n                    padname: filename,\n                    type: type,\n                    protected: is_protected\n                },\n                function(result) {\n                    if(result.status == 'success') {\n                        FileList.add(result.data, {animate: true, scrollTo: true});\n                    }\n                    else {\n                        OC.dialogs.alert(result.data.message, t('core', 'Could not create file'));\n                    }\n                }\n            );\n        }\n    };\n\n    // Only initialize the Ownpad menu when user is logged in and\n    // using the “files” app.\n    $(document).ready(function() {\n        if($('#filesApp').val()) {\n            OCA.FilesOwnpadMenu = new FilesOwnpadMenu();\n        }\n    });\n\n})(OCA);\n"],"names":["OCA","FilesOwnpadMenu","this","initialize","prototype","_etherpadEnabled","_etherpadPublicEnabled","_etherpadAPIEnabled","_ethercalcEnabled","self","OC","getCurrentUser","uid","$","ajax","url","generateUrl","done","result","data","ownpad_etherpad_enable","ownpad_etherpad_public_enable","ownpad_etherpad_useapi","ownpad_ethercalc_enable","Plugins","register","attach","newFileMenu","addMenuEntry","id","displayName","t","templateName","iconClass","fileType","actionHandler","filename","_createPad","type","is_protected","Files","isFileNameValid","FileList","getUniqueName","post","dir","App","currentFileList","getCurrentDirectory","padname","protected","status","add","animate","scrollTo","dialogs","alert","message","document","ready","val"],"sourceRoot":""}